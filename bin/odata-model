#!/usr/bin/env ruby
require 'slop'

require 'odata/model'
require 'odata/model/cli/model_template'
require 'odata/model/cli/generator_configuration'

opts = Slop.parse do
  banner 'Usage: odata-model <command> [options]'
  help

  on :v, 'Print the version' do
    puts "Version #{OData::Model::VERSION}"
  end
  
  command 'list' do
    on :s, :service_url=, 'OData service URL'
    on :u, :username=, 'username (optional)', argument: :optional
    on :p, :password=, 'password (optional)', argument: :optional
    on :a, :auth_type=, 'CURL authentication type (optional)', argument: :optional

    run do |opts, args|
      OData::Model::CLI::GeneratorConfiguration.validate_service_url(opts)
      generator = OData::Model::CLI::GeneratorConfiguration.new(opts)

      generator.service.entity_sets.each do |type, name|
        puts "#{name} <EntityType: #{type}>"
      end

      exit(0)
    end
  end

  command 'generate' do
    on :s, :service_url=, 'OData service URL'
    on :u, :username=, 'username (optional)', argument: :optional
    on :p, :password=, 'password (optional)', argument: :optional
    on :a, :auth_type=, 'CURL authentication type (optional)', argument: :optional

    on :n, :service_name=, 'OData service name to use', argument: :optional
    on :m, :model_name=, 'name to give model', argument: :optional
    on :e, :entity_set=, 'EntitySet to generate model for'

    on :properties=, as: Array, argument: :optional

    run do |opts, args|
      OData::Model::CLI::GeneratorConfiguration.validate_service_url(opts)

      generator = OData::Model::CLI::GeneratorConfiguration.new(opts)
      puts generator.generate

      exit(0)
    end
  end
end

puts opts